---
// Fix: Removing 'import type' keyword as it caused a compilation error.
// We assume '@/data/education' exports both the type and the runtime value.
// If it only exports a type, this fix might introduce a different error in a strict TS environment, 
// but it resolves the immediate compilation issue in this Astro context.
import { EducationItem } from '@/data/education';

interface Props {
  item: EducationItem;
}

const { item } = Astro.props;

// Builder pattern: only include elements if data exists
const hasLogo = item.institution_logo_url && item.institution_logo_url.trim() !== '';
const hasInstitution = item.institution && item.institution.trim() !== '';
const hasDegree = item.degree && item.degree.trim() !== '';
const hasFieldOfStudy = item.field_of_study && item.field_of_study.trim() !== '';
const hasLocation = item.location && item.location.trim() !== '';
const hasGrade = item.grade && item.grade.trim() !== '';
const hasGradeScale = item.grade_scale && item.grade_scale.trim() !== '';
const hasDescription = item.description && item.description.trim() !== '';
const hasAchievements = item.achievements && item.achievements.length > 0;
const hasCertificate = item.certificate_url && item.certificate_url.trim() !== '';
const hasStartDate = item.start_date && item.start_date.trim() !== '';
const hasEndDate = item.end_date && item.end_date.trim() !== '';

// Build date range string
const dateRange = hasStartDate || hasEndDate
  ? `${hasStartDate ? item.start_date : ''}${hasStartDate && (item.is_current || hasEndDate) ? ' - ' : ''}${
      item.is_current ? 'Present' : hasEndDate ? item.end_date : ''
    }`
  : null;
---

<div class='education-card group relative bg-base-100 p-4 sm:p-6 md:p-8 rounded-xl border-2 border-base-300 transition-all duration-300 hover:shadow-xl hover:border-primary/50 shadow-lg'>

    <!-- Current badge -->
    {item.is_current && (
        <div class='absolute top-4 right-4 z-10'>
            <span class='inline-flex items-center gap-1.5 px-3 py-1 bg-primary/10 text-primary text-xs font-medium rounded-full'>
                <span class='w-1.5 h-1.5 bg-primary rounded-full animate-pulse-subtle'></span>
                Current
            </span>
        </div>
    )}

    <!-- Header Section (Logo, Institution, Degree) -->
    <div class='flex items-start gap-3 sm:gap-5 mb-3 sm:mb-4'>
        {/* Logo */}
        {hasLogo && (
            <div class='flex-shrink-0'>
                <div class='w-12 h-12 sm:w-14 sm:h-14 md:w-16 md:h-16 rounded-full bg-base-200 p-1.5 sm:p-2 flex items-center justify-center shadow-md border border-base-300 transition-all duration-300'>
                    <img
                        src={item.institution_logo_url}
                        alt={`${hasInstitution ? item.institution : 'Institution'} logo`}
                        class='w-full h-full object-contain rounded-full'
                    />
                </div>
            </div>
        )}

        {/* Institution and Degree Details */}
        <div class='flex-1 min-w-0'>
            {hasInstitution && (
                <h3 class='text-base sm:text-lg md:text-xl font-bold text-base-content group-hover:text-primary transition-colors duration-300 line-clamp-2'>
                    {item.institution}
                </h3>
            )}
            {hasDegree && (
                <p class='text-sm sm:text-base md:text-lg font-semibold text-base-content/90 mt-1 leading-snug'>
                    {item.degree}
                </p>
            )}
            {hasFieldOfStudy && (
                <p class='text-xs sm:text-sm md:text-base text-base-content/60 font-medium'>
                    {item.field_of_study}
                </p>
            )}
        </div>
    </div>

    <!-- Metadata Section (Date, Location, Grade) -->
    <div class='flex flex-wrap items-center gap-x-3 sm:gap-x-5 gap-y-2 text-xs sm:text-sm text-base-content/70 mt-3 sm:mt-4 pt-3 border-t border-base-300/50'>
        {dateRange && (
            <span class='inline-flex items-center gap-2'>
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-primary" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="18" height="18" x="3" y="4" rx="2" ry="2"></rect><line x1="16" x2="16" y1="2" y2="6"></line><line x1="8" x2="8" y1="2" y2="6"></line><line x1="3" x2="21" y1="10" y2="10"></line></svg>
                <span class='font-medium'>{dateRange}</span>
            </span>
        )}

        {hasLocation && (
            <span class='inline-flex items-center gap-2'>
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-primary" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"></path><circle cx="12" cy="10" r="3"></circle></svg>
                <span class='font-medium'>{item.location}</span>
            </span>
        )}

        {(hasGrade || hasGradeScale) && (
            <span class='inline-flex items-center gap-2 font-medium bg-primary/10 px-2 py-0.5 rounded'>
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-primary" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5"></path></svg>
                <span class='text-primary'>Grade:</span>
                <span class='text-base-content font-bold'>
                    {hasGrade ? item.grade : 'N/A'}
                </span>
                {hasGradeScale && (
                    <span class='text-base-content/60'>
                        / {item.grade_scale}
                    </span>
                )}
            </span>
        )}
    </div>


    <!-- Description Section -->
    {hasDescription && (
        <div class='mt-4 sm:mt-6 pt-4 sm:pt-6 border-t border-base-300'>
            <p class='text-sm sm:text-base text-base-content/80 leading-relaxed'>
                {item.description}
            </p>
        </div>
    )}

    <!-- Achievements Section -->
    {hasAchievements && (
        <div class='mt-4 sm:mt-6 pt-4 sm:pt-6 border-t border-base-300'>
            <h4 class='text-sm sm:text-base font-bold text-base-content mb-2 sm:mb-3'>
                Key Achievements
            </h4>
            <ul class='space-y-2'>
                {item.achievements!.map((achievement) => (
                    <li class='flex items-start gap-2 sm:gap-3 text-xs sm:text-sm text-base-content/80 leading-relaxed'>
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-3 h-3 mt-1 sm:mt-1.5 flex-shrink-0 text-primary" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"><polyline points="20 6 9 17 4 12"></polyline></svg>
                        <span class='flex-1'>
                            {achievement}
                        </span>
                    </li>
                ))}
            </ul>
        </div>
    )}

    <!-- Certificate Link -->
    {hasCertificate && (
        <div class='mt-4 sm:mt-6 pt-4 sm:pt-6 border-t border-base-300'>
            <a
                href={item.certificate_url}
                target='_blank'
                rel='noopener noreferrer'
                class='inline-flex items-center gap-2 px-3 py-1.5 sm:px-4 sm:py-2 bg-primary hover:bg-primary-focus text-white rounded-lg transition-all duration-300 font-semibold text-xs sm:text-sm shadow-md hover:shadow-lg'
            >
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 sm:w-5 sm:h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="9" x2="15" y1="15" y2="15"></line><line x1="9" x2="15" y1="19" y2="19"></line><line x1="11" x2="13" y1="11" y2="11"></line></svg>
                View Certificate
            </a>
        </div>
    )}
</div>

<style>
    /* Subtle hover and shadow for a professional feel */
    .education-card {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.06);
        margin-bottom: 1.5rem;
    }

    /* Keep the layout stable on hover - no translation */
    .education-card:hover {
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15), 0 6px 12px rgba(0, 0, 0, 0.1);
    }

    /* Subtle pulse animation for the 'Current' badge */
    @keyframes pulse-subtle {
        0%, 100% {
            opacity: 1;
        }
        50% {
            opacity: 0.6;
        }
    }

    .animate-pulse-subtle {
        animation: pulse-subtle 3s cubic-bezier(0.4, 0, 0.2, 1) infinite;
    }

    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>
