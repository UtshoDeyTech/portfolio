---
import type { BlogPost } from '@/data/blogs';
import { blogsData } from '@/data/blogs';

interface Props {
  blog: BlogPost;
  showExcerpt?: boolean;
}

const { blog, showExcerpt = true } = Astro.props;

// Builder pattern: only include elements if data exists
const hasTitle = blog.title && blog.title.trim() !== '';
const hasDescription = blog.description && blog.description.trim() !== '';
const hasCoverImage = blog.cover_image && blog.cover_image.trim() !== '';
const hasAuthor = blog.author && blog.author.trim() !== '';
const hasPublishedDate = blog.published_date && blog.published_date.trim() !== '';
const hasReadTime = blog.read_time && blog.read_time > 0;
const hasTags = blog.tags && blog.tags.length > 0;
const hasCategories = blog.categories && blog.categories.length > 0;
const hasViews = blog.views && blog.views > 0;
const hasLikes = blog.likes && blog.likes > 0;

// Generate slug from file_name if not provided
const slug = blog.slug || blog.file_name.replace('.md', '');

// Format date
const formatDate = (dateStr: string) => {
  try {
    const date = new Date(dateStr);
    return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });
  } catch {
    return dateStr;
  }
};

// Get author info
const author = hasAuthor ? blog.author : blogsData.metadata.author_default;
const authorImage = blog.author_image || blogsData.metadata.author_image_default;
---

<article class='blog-card bg-base-100 rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 border border-base-300 overflow-hidden group'>
  <a href={`/blog/${slug}`} class='block'>
    <!-- Cover Image -->
    {hasCoverImage ? (
      <div class='relative h-48 overflow-hidden'>
        <img
          src={blog.cover_image}
          alt={hasTitle ? blog.title : 'Blog cover'}
          class='w-full h-full object-cover group-hover:scale-105 transition-transform duration-300'
        />
        {blog.is_featured && (
          <div class='absolute top-3 left-3 badge badge-primary badge-lg gap-1'>
            <svg class='w-4 h-4' fill='currentColor' viewBox='0 0 20 20'>
              <path d='M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z'></path>
            </svg>
            Featured
          </div>
        )}
      </div>
    ) : (
      <div class='h-48 bg-gradient-to-br from-primary/20 via-secondary/20 to-accent/20 flex items-center justify-center'>
        <svg class='w-16 h-16 text-base-content/20' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
          <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z'></path>
        </svg>
      </div>
    )}

    <!-- Content -->
    <div class='p-6'>
      <!-- Categories -->
      {hasCategories && (
        <div class='flex flex-wrap gap-2 mb-3'>
          {blog.categories!.slice(0, 2).map((category) => (
            <span class='badge badge-secondary badge-sm'>
              {category}
            </span>
          ))}
        </div>
      )}

      <!-- Title -->
      {hasTitle && (
        <h3 class='text-xl font-bold text-base-content mb-3 line-clamp-2 group-hover:text-primary transition-colors'>
          {blog.title}
        </h3>
      )}

      <!-- Description -->
      {showExcerpt && hasDescription && (
        <p class='text-base-content/70 text-sm mb-4 line-clamp-3'>
          {blog.description}
        </p>
      )}

      <!-- Tags -->
      {hasTags && (
        <div class='flex flex-wrap gap-2 mb-4'>
          {blog.tags!.slice(0, 3).map((tag) => (
            <span class='px-2 py-1 bg-base-200 text-base-content/60 text-xs rounded-md hover:bg-base-300 transition-colors'>
              #{tag}
            </span>
          ))}
          {blog.tags!.length > 3 && (
            <span class='px-2 py-1 text-base-content/40 text-xs'>
              +{blog.tags!.length - 3} more
            </span>
          )}
        </div>
      )}

      <!-- Meta Information -->
      <div class='flex items-center justify-between pt-4 border-t border-base-300'>
        <!-- Author & Date -->
        <div class='flex items-center gap-3'>
          <div class='avatar'>
            <div class='w-8 h-8 rounded-full'>
              <img
                src={authorImage}
                alt={author}
                class='object-cover'
              />
            </div>
          </div>
          <div class='text-xs'>
            <p class='font-medium text-base-content'>{author}</p>
            {hasPublishedDate && (
              <p class='text-base-content/60'>{formatDate(blog.published_date!)}</p>
            )}
          </div>
        </div>

        <!-- Stats -->
        <div class='flex items-center gap-3 text-xs text-base-content/60'>
          {hasReadTime && (
            <span class='flex items-center gap-1'>
              <svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z'></path>
              </svg>
              {blog.read_time}m
            </span>
          )}
          {hasViews && (
            <span class='flex items-center gap-1'>
              <svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 12a3 3 0 11-6 0 3 3 0 016 0z'></path>
                <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z'></path>
              </svg>
              {blog.views}
            </span>
          )}
          {hasLikes && (
            <span class='flex items-center gap-1'>
              <svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z'></path>
              </svg>
              {blog.likes}
            </span>
          )}
        </div>
      </div>
    </div>
  </a>
</article>

<style>
  .blog-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .blog-card:hover {
    transform: translateY(-4px);
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
