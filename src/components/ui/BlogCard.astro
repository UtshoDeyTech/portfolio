---
import type { BlogPost } from '@/data/blogs';
import { blogsData } from '@/data/blogs';

interface Props {
  blog: BlogPost;
  showExcerpt?: boolean;
}

const { blog, showExcerpt = true } = Astro.props;

/**
 * Utility function to check if a value is truthy, non-empty string, or non-empty array/number.
 */
const hasData = (value: any): boolean => {
  if (Array.isArray(value)) return value.length > 0;
  if (typeof value === 'number') return value > 0;
  if (typeof value === 'string') return value.trim() !== '';
  return !!value;
};

// Simplified Data Checks
const data = {
  hasTitle: hasData(blog.title),
  hasDescription: hasData(blog.description),
  hasCoverImage: hasData(blog.cover_image),
  hasAuthor: hasData(blog.author),
  hasPublishedDate: hasData(blog.published_date),
  hasReadTime: hasData(blog.read_time),
  hasTags: hasData(blog.tags),
  hasCategories: hasData(blog.categories),
  hasViews: hasData(blog.views),
  hasLikes: hasData(blog.likes),
  isFeatured: blog.is_featured,
};

// Generate slug from file_name if not provided
const slug = blog.slug || blog.file_name.replace('.md', '');

// Format date
const formatDate = (dateStr: string) => {
  try {
    const date = new Date(dateStr);
    return date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });
  } catch {
    return dateStr;
  }
};

// Get author info
const author = data.hasAuthor ? blog.author : blogsData.metadata.author_default;
const authorImage = blog.author_image || blogsData.metadata.author_image_default;
---

<article class='blog-card bg-base-100 rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 border border-base-300 group overflow-hidden flex flex-col'>
  <a href={`/blog/${slug}`} class='block h-full flex flex-col'>
    
    {data.hasCoverImage ? (
      <div class='relative h-56 overflow-hidden'>
        <img
          src={blog.cover_image}
          alt={data.hasTitle ? blog.title : 'Blog cover'}
          class='w-full h-full object-cover group-hover:scale-[1.03] transition-transform duration-500 ease-in-out'
        />
        {data.isFeatured && (
          <div class='absolute top-4 right-4 bg-primary text-primary-content text-xs font-semibold px-3 py-1 rounded-full shadow-md'>
            <span class="flex items-center gap-1">
              <svg class='w-3.5 h-3.5' fill='currentColor' viewBox='0 0 20 20'>
                <path d='M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z'></path>
              </svg>
              Featured
            </span>
          </div>
        )}
      </div>
    ) : (
      <div class='h-56 bg-base-200 flex items-center justify-center border-b border-base-300'>
        <svg class='w-16 h-16 text-base-content/20' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
          <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z'></path>
        </svg>
      </div>
    )}

    <div class='p-5 md:p-6 flex-grow flex flex-col justify-between'>
      <div class="space-y-3 flex-grow">
        {data.hasCategories && (
          <div class='flex flex-wrap gap-2'>
            {blog.categories!.slice(0, 2).map((category) => (
              <span class='text-xs font-bold text-secondary bg-secondary/10 px-3 py-1 rounded-full uppercase tracking-wider border border-secondary/30'>
                {category}
              </span>
            ))}
          </div>
        )}

        {data.hasTitle && (
          <h3 class='text-2xl font-extrabold text-base-content leading-snug line-clamp-2 group-hover:text-primary transition-colors'>
            {blog.title}
          </h3>
        )}

        {showExcerpt && data.hasDescription && (
          <p class='text-base-content/70 text-sm line-clamp-3 mb-2'>
            {blog.description}
          </p>
        )}
      </div>

      {data.hasTags && (
        <div class='flex flex-wrap gap-2 mt-4'>
          {blog.tags!.slice(0, 3).map((tag) => (
            <span class='px-2.5 py-0.5 bg-base-200 text-base-content/60 text-xs rounded-full hover:bg-base-300 transition-colors'>
              #{tag}
            </span>
          ))}
          {blog.tags!.length > 3 && (
            <span class='px-2.5 py-0.5 text-base-content/40 text-xs'>
              +{blog.tags!.length - 3} more
            </span>
          )}
        </div>
      )}

      <div class='flex items-center justify-between pt-4 mt-4 border-t border-base-200'>
        <div class='flex items-center gap-3'>
          <div class='avatar'>
            <div class='w-9 h-9 rounded-full ring-2 ring-primary ring-offset-2 ring-offset-base-100'>
              <img
                src={authorImage}
                alt={author}
                class='object-cover'
              />
            </div>
          </div>
          <div class='text-sm'>
            <p class='font-semibold text-base-content'>{author}</p>
            {data.hasPublishedDate && (
              <p class='text-base-content/60 text-xs'>{formatDate(blog.published_date!)}</p>
            )}
          </div>
        </div>

        <div class='flex items-center gap-3 text-xs text-base-content/50'>
          {data.hasReadTime && (
            <span class='flex items-center gap-1 font-medium'>
              <svg class='w-4 h-4 text-primary' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z'></path>
              </svg>
              {blog.read_time}m
            </span>
          )}
          {data.hasViews && (
            <span class='flex items-center gap-1'>
              <svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 12a3 3 0 11-6 0 3 3 0 016 0z'></path>
                <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z'></path>
              </svg>
              {blog.views}
            </span>
          )}
          {data.hasLikes && (
            <span class='flex items-center gap-1 text-error/80'>
              <svg class='w-4 h-4' fill='currentColor' viewBox='0 0 24 24'>
                <path d='M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z'></path>
              </svg>
              {blog.likes}
            </span>
          )}
        </div>
      </div>
    </div>
  </a>
</article>

<style>
  /* Keep the original hover effect for a sense of lift/depth */
  .blog-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .blog-card:hover {
    transform: translateY(-6px); /* A little more lift for dramatic effect */
    box-shadow: 0 15px 30px -5px rgba(0, 0, 0, 0.1), 0 8px 15px -5px rgba(0, 0, 0, 0.05); /* Stronger shadow on hover */
  }

  /* Standard line-clamp utilities */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>