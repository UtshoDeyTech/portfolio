---
import type { EducationItem } from '@/data/education';

interface Props {
  item: EducationItem;
}

const { item } = Astro.props;

// Builder pattern: only include elements if data exists
const hasLogo = item.institution_logo_url && item.institution_logo_url.trim() !== '';
const hasInstitution = item.institution && item.institution.trim() !== '';
const hasDegree = item.degree && item.degree.trim() !== '';
const hasFieldOfStudy = item.field_of_study && item.field_of_study.trim() !== '';
const hasLocation = item.location && item.location.trim() !== '';
const hasGrade = item.grade && item.grade.trim() !== '';
const hasGradeScale = item.grade_scale && item.grade_scale.trim() !== '';
const hasDescription = item.description && item.description.trim() !== '';
const hasAchievements = item.achievements && item.achievements.length > 0;
const hasCertificate = item.certificate_url && item.certificate_url.trim() !== '';
const hasStartDate = item.start_date && item.start_date.trim() !== '';
const hasEndDate = item.end_date && item.end_date.trim() !== '';

// Build date range string
const dateRange = hasStartDate || hasEndDate
  ? `${hasStartDate ? item.start_date : 'N/A'} - ${
      item.is_current ? 'Present' : hasEndDate ? item.end_date : 'N/A'
    }`
  : null;
---

<div class='education-card bg-base-100 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden border border-base-300'>
	<div class='p-6'>
		<!-- Header Section -->
		<div class='flex items-start gap-4 mb-4'>
			{hasLogo && (
				<div class='flex-shrink-0'>
					<img
						src={item.institution_logo_url}
						alt={`${hasInstitution ? item.institution : 'Institution'} logo`}
						class='w-16 h-16 object-contain rounded-lg bg-base-200 p-2'
					/>
				</div>
			)}

			<div class='flex-1'>
				{hasInstitution && (
					<h3 class='text-xl font-bold text-base-content mb-1'>
						{item.institution}
					</h3>
				)}

				{hasDegree && (
					<p class='text-lg font-semibold text-primary'>
						{item.degree}
						{hasFieldOfStudy && <span class='text-base-content/70'> in {item.field_of_study}</span>}
					</p>
				)}

				<div class='flex flex-wrap gap-3 mt-2 text-sm text-base-content/60'>
					{dateRange && (
						<span class='flex items-center gap-1'>
							<svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
								<path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z'></path>
							</svg>
							{dateRange}
						</span>
					)}

					{hasLocation && (
						<span class='flex items-center gap-1'>
							<svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
								<path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z'></path>
								<path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M15 11a3 3 0 11-6 0 3 3 0 016 0z'></path>
							</svg>
							{item.location}
						</span>
					)}
				</div>
			</div>

			{(hasGrade || hasGradeScale) && (
				<div class='flex-shrink-0 text-right'>
					<div class='bg-primary/10 text-primary px-4 py-2 rounded-lg'>
						<div class='text-2xl font-bold'>
							{hasGrade ? item.grade : 'N/A'}
						</div>
						{hasGradeScale && (
							<div class='text-xs opacity-70'>
								out of {item.grade_scale}
							</div>
						)}
					</div>
				</div>
			)}
		</div>

		<!-- Description Section -->
		{hasDescription && (
			<div class='mb-4'>
				<p class='text-base-content/80 leading-relaxed'>
					{item.description}
				</p>
			</div>
		)}

		<!-- Achievements Section -->
		{hasAchievements && (
			<div class='mb-4'>
				<h4 class='text-sm font-semibold text-base-content mb-2 flex items-center gap-2'>
					<svg class='w-4 h-4 text-primary' fill='currentColor' viewBox='0 0 20 20'>
						<path d='M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z'></path>
					</svg>
					Achievements
				</h4>
				<ul class='space-y-1'>
					{item.achievements!.map((achievement) => (
						<li class='flex items-start gap-2 text-sm text-base-content/80'>
							<span class='text-primary mt-1'>â€¢</span>
							<span>{achievement}</span>
						</li>
					))}
				</ul>
			</div>
		)}

		<!-- Certificate Link -->
		{hasCertificate && (
			<div class='mt-4 pt-4 border-t border-base-300'>
				<a
					href={item.certificate_url}
					target='_blank'
					rel='noopener noreferrer'
					class='inline-flex items-center gap-2 text-primary hover:text-primary-focus transition-colors text-sm font-medium'
				>
					<svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
						<path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z'></path>
					</svg>
					View Certificate
				</a>
			</div>
		)}
	</div>
</div>

<style>
	.education-card {
		transition: transform 0.3s ease, box-shadow 0.3s ease;
	}

	.education-card:hover {
		transform: translateY(-4px);
	}
</style>
