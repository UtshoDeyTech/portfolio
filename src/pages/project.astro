---
import Layout from '../layouts/Layout.astro';
import ProjectCard from '../components/ui/ProjectCard.astro';
import { projectsData, getVisibleProjects } from '@/data/projects';

// Filter visible projects and sort by display_order
const visibleProjects = getVisibleProjects();
const page = projectsData.page || {};

// Count projects by type
const projectsByType = visibleProjects.reduce((acc, project) => {
  const type = project.type || 'Other';
  acc[type] = (acc[type] || 0) + 1;
  return acc;
}, {} as Record<string, number>);

// Get all unique tags
const allTags = Array.from(
  new Set(
    visibleProjects
      .flatMap(p => p.tags || [])
      .filter(tag => tag && tag.trim() !== '')
  )
).sort();

// Filter state (will be handled by client-side script)
---

<Layout>
  <!-- Page Header -->
  <section class='mb-12'>
    <div class='flex flex-col md:flex-row items-start md:items-center justify-between gap-6'>
      <div class='flex items-center gap-4'>
        <div class='p-3 bg-primary/10 rounded-lg'>
          <svg class='w-8 h-8 text-primary' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
            <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10'></path>
          </svg>
        </div>
        <div>
          <h1 class='text-4xl font-bold text-base-content'>{page.title ?? 'Projects'}</h1>
          <p class='text-base-content/70 mt-2'>{page.subtitle ?? 'A showcase of my professional and personal work'}</p>
        </div>
      </div>

      <!-- Project Stats -->
      <div class='flex gap-4'>
        <div class='bg-gradient-to-br from-primary/10 to-primary/5 border border-primary/20 rounded-lg px-6 py-4 text-center'>
          <div class='text-3xl font-bold text-primary'>
            {visibleProjects.length}
          </div>
          <div class='text-xs text-base-content/60 mt-1'>
            {page.stats_labels?.total_projects ?? 'Total Projects'}
          </div>
        </div>

        {Object.keys(projectsByType).length > 0 && (
          <div class='bg-gradient-to-br from-secondary/10 to-secondary/5 border border-secondary/20 rounded-lg px-6 py-4 text-center'>
            <div class='text-3xl font-bold text-secondary'>
              {Object.keys(projectsByType).length}
            </div>
            <div class='text-xs text-base-content/60 mt-1'>
              {page.stats_labels?.categories ?? 'Categories'}
            </div>
          </div>
        )}
      </div>
    </div>
  </section>

  <!-- Filter Section -->
  {Object.keys(projectsByType).length > 1 && (
    <section class='mb-8'>
      <div class='flex flex-wrap gap-3 items-center'>
        <span class='text-sm font-semibold text-base-content/70'>Filter by Type:</span>
        <button
          class='filter-btn btn btn-sm btn-outline'
          data-filter='all'
        >
          All ({visibleProjects.length})
        </button>
        {Object.entries(projectsByType).map(([type, count]) => (
          <button
            class='filter-btn btn btn-sm btn-outline'
            data-filter={type}
          >
            {type} ({count})
          </button>
        ))}
      </div>
    </section>
  )}

  <!-- Projects Grid -->
  <section class='space-y-8' id='projects-container'>
    {visibleProjects.length > 0 ? (
      visibleProjects.map((project) => (
        <div class='project-item' data-type={project.type || 'Other'}>
          <ProjectCard item={project} />
        </div>
      ))
    ) : (
      <div class='text-center py-12 bg-base-200 rounded-lg'>
        <svg class='w-16 h-16 mx-auto text-base-content/30 mb-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
          <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10'></path>
        </svg>
        <p class='text-base-content/60'>No projects available</p>
      </div>
    )}
  </section>

  <!-- Tags Cloud Section -->
  {allTags.length > 0 && (
    <section class='mt-16 pt-12 border-t border-base-300'>
      <h2 class='text-2xl font-bold text-base-content mb-6 flex items-center gap-2'>
        <svg class='w-6 h-6 text-primary' fill='currentColor' viewBox='0 0 20 20'>
          <path fill-rule='evenodd' d='M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z' clip-rule='evenodd'></path>
        </svg>
        All Project Tags
      </h2>

      <div class='flex flex-wrap gap-3'>
        {allTags.map((tag) => (
          <span class='px-4 py-2 bg-base-200 text-base-content text-sm font-medium rounded-lg hover:bg-primary hover:text-primary-content transition-colors cursor-default border border-base-300'>
            #{tag}
          </span>
        ))}
      </div>
    </section>
  )}
</Layout>

<script>
  // Client-side filtering
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const projectItems = document.querySelectorAll('.project-item');

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const filter = button.getAttribute('data-filter');

        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('btn-active'));
        button.classList.add('btn-active');

        // Filter projects
        projectItems.forEach(item => {
          const projectType = item.getAttribute('data-type');
          if (filter === 'all' || projectType === filter) {
            item.style.display = 'block';
            item.style.animation = 'fadeIn 0.3s ease-in';
          } else {
            item.style.display = 'none';
          }
        });
      });
    });

    // Set "All" as active by default
    const allButton = document.querySelector('[data-filter="all"]');
    if (allButton) {
      allButton.classList.add('btn-active');
    }
  });
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .filter-btn {
    transition: all 0.3s ease;
  }

  .filter-btn:hover {
    transform: translateY(-2px);
  }
</style>
